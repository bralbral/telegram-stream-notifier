from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

from src.db.models.channel_type import ChannelTypeEnum
from src.db.models.channel_type import IntEnum


# revision identifiers, used by Alembic.
revision: str = "e97bbc0fdb6a"
down_revision: Union[str, None] = "f78d1309ec45"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "channel_types",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("type", IntEnum(ChannelTypeEnum), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("type", name="ix_uniq_type"),
    )
    op.create_index(
        op.f("ix_channel_types_type"), "channel_types", ["type"], unique=False
    )

    # Use batch mode to alter the `channels` table
    with op.batch_alter_table("channels", schema=None) as batch_op:
        # Add the new column with `nullable=True`
        batch_op.add_column(
            sa.Column(
                "channel_type_id",
                sa.Integer(),
                nullable=True,
                server_default=str(ChannelTypeEnum.YOUTUBE),
            ),
        )

        batch_op.alter_column("channel_type_id", nullable=False)

        # Create the foreign key constraint
        batch_op.create_foreign_key(
            "fk_channels_channel_type_id",
            "channel_types",
            ["channel_type_id"],
            ["id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "channels", type_="foreignkey")
    op.drop_column("channels", "channel_type_id")
    op.drop_index(op.f("ix_channel_types_type"), table_name="channel_types")
    op.drop_table("channel_types")
    # ### end Alembic commands ###
