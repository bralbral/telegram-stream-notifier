from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

from src.db.migrations.utils import column_exists


# revision identifiers, used by Alembic.
revision: str = "f78d1309ec45"
down_revision: Union[str, None] = "da6a2af82a8b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_channel_errors_error", table_name="channel_errors", if_exists=True
    )
    op.drop_table("channel_errors")
    op.drop_index("ix_users_is_admin", table_name="users", if_exists=True)
    if column_exists("users", "is_admin"):
        op.drop_column("users", "is_admin")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("is_admin", sa.BOOLEAN(), nullable=True))
    op.create_index("ix_users_is_admin", "users", ["is_admin"], unique=False)
    op.create_table(
        "channel_errors",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("error", sa.VARCHAR(length=512), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("channel_id", sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(
            ["channel_id"], ["channels.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_channel_errors_error", "channel_errors", ["error"], unique=False
    )
    # ### end Alembic commands ###
